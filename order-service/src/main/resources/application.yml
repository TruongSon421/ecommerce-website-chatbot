# Server Configuration
server:
  port: 8084

# Application Name (for Eureka and identification)
spring:
  application:
    name: order-service
  config:
    import: "optional:configserver:http://config-service:8888"
  

  # MySQL Configuration (Primary Data Source)
  datasource:
      url: jdbc:mysql://mysql:3306/ecommerce_order?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
      username: tiendoan
      password: tiendoan
      driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  

  # Kafka Configuration (Producer for event-driven communication)
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: order-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.eazybytes.event.model"
        spring.json.type.mapping: >-
          checkout-initiated:com.eazybytes.event.model.CheckoutInitiatedEvent,
          checkout-failed:com.eazybytes.event.model.CheckoutFailedEvent,
          inventory-reserved:com.eazybytes.event.model.InventoryReservedEvent,
          inventory-reservation-failed:com.eazybytes.event.model.InventoryReservationFailedEvent,
          payment-succeeded:com.eazybytes.event.model.PaymentSucceededEvent,
          payment-failed:com.eazybytes.event.model.PaymentFailedEvent,
          order-completed:com.eazybytes.event.model.OrderCompletedEvent
    
kafka:
  topics:
    checkout:
      initiated: checkout-initiated  # Lắng nghe từ CartService
      failed: checkout-failed       # Có thể gửi hoặc lắng nghe
    order:
      completed: order-completed    # Có thể gửi hoặc lắng nghe
      failed: order-failed
    inventory:
      reserved: inventory-reserved  # Lắng nghe từ InventoryService
      reservation-failed: inventory-reservation-failed  # Lắng nghe từ InventoryService
    payment:
      succeeded: payment-succeeded  # Lắng nghe từ PaymentService
      failed: payment-failed        # Lắng nghe từ PaymentService
    reserve-inventory-request: reserve-inventory-request
    process-payment-request: process-payment-request
    confirm-inventory-reservation: confirm-inventory-reservation
    cancel-inventory-reservation: cancel-inventory-reservation


# Eureka Configuration (Service Discovery)
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
    preferIpAddress: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    com.eazybytes: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: INFO
    # Chỉ log ERROR cho các vấn đề serialization
    org.springframework.kafka.support.serializer: INFO