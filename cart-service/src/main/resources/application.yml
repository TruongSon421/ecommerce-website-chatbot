# Server Configuration
server:
  port: 8082

# Application Name (for Eureka and identification)
spring:
  application:
    name: cart-service
  config:
    import: "optional:configserver:http://config-service:8888"
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 5000

  # MySQL Configuration (Primary Data Source)
  datasource:
    url: jdbc:mysql://mysql:3306/ecommerce_cart?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
    username: tiendoan
    password: tiendoan
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: true
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  # Redis Configuration (Cache)
  data:
    redis:
      host: redis
      port: 6379
      database: 1
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
        shutdown-timeout: 100ms

  # Kafka Configuration
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: cart-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false  # Dùng ack thủ công
      properties:
        spring.json.trusted.packages: "com.eazybytes.event.model"  # Chỉ trust package của sự kiện

# Kafka Topics
kafka:
  topics:
    checkout:
      initiated: checkout-initiated
      failed: checkout-failed
    order:
      completed: order-completed
      failed: order-failed
    cart:
      cleared: cart-cleared
      clearfailed: cart-clear-failed

# Eureka Configuration (Service Discovery)
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
    preferIpAddress: true

# Management Endpoints (Monitoring)
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# Resilience4j Configuration (Circuit Breaker and Retry)
resilience4j:
  circuitbreaker:
    instances:
      inventoryService:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000  # 10 seconds
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
  retry:
    instances:
      inventoryService:
        maxAttempts: 3
        waitDuration: 1000  # 1 second
        retryExceptions:
          - org.springframework.web.client.RestClientException
          - java.io.IOException
        ignoreExceptions:
          - java.lang.IllegalArgumentException

